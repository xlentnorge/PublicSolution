name: Security scans

on: push

jobs:
  zap-scan:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build code image
        run: docker build ./PublicHomePage -t tryggve-public:zap-scan

      - name: Run code container
        run: docker run -d -p 8080:80 tryggve-public:zap-scan

      - name: Run ZAP Scan
        uses: zaproxy/action-full-scan@v0.10.0
        with:
          target: 'http://localhost:8080'
          artifact_name: 'zap-report'
          fail_action: true
        continue-on-error: true

#      - name: Notify Team on Slack
#        if: failure()
#        id: slack
#        env:
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
#        uses: slackapi/slack-github-action@v1.25.0
#        with:
#          webhook-url: ${{ secrets.SLACK_WEBHOOK }}
#          message: "Security scan identified a threat in the Docker image"

      - name: Download ZAP Report Artifact
        if: failure()
        uses: actions/download-artifact@v2
        with:
          name: zap-report

      - name: check if ZAP saves local report
        run: ls -R
#      - name: Unzip ZAP Report
#        run: |
#          unzip zap-report.zip
#          ls -R

#      - name: Check ZAP Report for Warnings/Errors
#        run: |
#          python check_zap_report.py zap-report/zap-report.json

      - name: Create GitHub Issue on Failure
        if: failure()
        uses: actions/github-script@v5
        with:
          script: |
            github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Security Vulnerability Detected',
              body: 'A security vulnerability was detected. Please review the attached security scan report for details.',
              labels: ['security', 'urgent']
            })

  secret-scan:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build code image
        run: docker build ./PublicHomePage -t tryggve-public:secret-scan

      - name: Run secret scan
        run: |
          docker run -i --rm --name=deepfence-secretscanner \
          -v /var/run/docker.sock:/var/run/docker.sock \
          deepfenceio/deepfence_secret_scanner:2.0.0 \
          -image-name tryggve-public:secret-scan \
          --output json > secret-report.json

      - name: Upload secret scan artifact
        uses: actions/upload-artifact@v2
        with:
          name: secret-report
          path: secret-report.json